{{!-- S·ª≠ d·ª•ng layout product.hbs --}}
{{!< layout/product}}
<style>
    .wishlist-btn {
        transition: all 0.3s ease;
        border: none;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .wishlist-btn:hover {
        transform: scale(1.1);
        background-color: #fff5f5;
        color: #e53e3e;
    }

    .wishlist-btn.added {
        background-color: #fed7d7;
        color: #e53e3e;
    }

    .wishlist-btn.added i {
        color: #e53e3e;
    }

    .wishlist-btn-small {
        width: 40px;
        padding: 8px;
        transition: all 0.3s ease;
    }

    .wishlist-btn-small:hover {
        background-color: #fff5f5;
        border-color: #e53e3e;
        color: #e53e3e;
    }

    .wishlist-btn-small.added {
        background-color: #e53e3e;
        border-color: #e53e3e;
        color: white;
    }

    .wishlist-btn-small.added i {
        color: white;
    }

    /* Animation cho heart icon */
    .wishlist-btn i, .wishlist-btn-small i {
        transition: all 0.3s ease;
    }

    .wishlist-btn:hover i, .wishlist-btn-small:hover i {
        transform: scale(1.2);
    }

    /* Toast cho wishlist */
    .wishlist-toast {
        background: linear-gradient(45deg, #ff6b6b, #ee5a24);
        border: none;
    }
</style>
<!-- Hero Section -->
<section class="hero-fruit-bg text-white py-5">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-6">
                <h1 class="display-4 fw-bold mb-4">
                    üçé Tr√°i c√¢y t∆∞∆°i ngon 
                    <span class="fruit-icon">üçäüçå</span>
                </h1>
                <p class="lead mb-4">Kh√°m ph√° kho tr√°i c√¢y t∆∞∆°i ngon, gi√†u vitamin, ƒë∆∞·ª£c ch·ªçn l·ªçc k·ªπ c√†ng t·ª´ nh·ªØng v∆∞·ªùn c√¢y ch·∫•t l∆∞·ª£ng nh·∫•t</p>
                <div class="mb-4">
                    <span class="organic-badge me-2">üåø 100% Organic</span>
                    <span class="organic-badge me-2">‚ú® T∆∞∆°i h√†ng ng√†y</span>
                    <span class="organic-badge">üöö Giao nhanh 2h</span>
                </div>
                <a href="#products" class="btn btn-light btn-lg me-3">
                    <span class="fruit-icon">üõí</span>
                    Mua ngay
                </a>
                <a href="#features" class="btn btn-fruit-orange btn-lg">
                    <span class="fruit-icon">‚ÑπÔ∏è</span>
                    T√¨m hi·ªÉu th√™m
                </a>
            </div>
            <div class="col-lg-6 text-center">
                <div class="fruit-icon" style="font-size: 8rem;">
                    üçéüçäüçåüçáü•ùüçì
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Category Filter Section -->
<section class="py-5">
    <div class="container">
        <div class="category-filter">
            <h4 class="mb-4">
                üçá L·ªçc theo lo·∫°i tr√°i c√¢y
            </h4>
            <div class="row">
                <div class="col-md-8">
                    <div class="btn-group flex-wrap" role="group">
                        <button type="button" class="btn btn-outline-primary active" onclick="filterProducts('all')">
                            üçé T·∫•t c·∫£
                        </button>
                        {{#each categories}}
                        <button type="button" class="btn btn-outline-primary" onclick="filterProducts('{{this.slug}}')">
                            {{this.icon}} {{this.name}}
                        </button>
                        {{/each}}
                    </div>
                </div>
                <div class="col-md-4">
                    <select class="form-select" onchange="sortProducts(this.value)">
                        <option value="default">üìä S·∫Øp x·∫øp theo</option>
                        <option value="price-low">üí∞ Gi√° th·∫•p ƒë·∫øn cao</option>
                        <option value="price-high">üíé Gi√° cao ƒë·∫øn th·∫•p</option>
                        <option value="name">üî§ T√™n A-Z</option>
                        <option value="rating">‚≠ê ƒê√°nh gi√° cao nh·∫•t</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Products Section -->
<section id="products" class="py-5">
    <div class="container">
        <div class="row mb-5">
            <div class="col-12 text-center">
                <h2 class="display-5 fw-bold mb-3">
                    üçé Tr√°i c√¢y t∆∞∆°i ngon h√†ng ng√†y
                </h2>
                <p class="lead text-muted">Kh√°m ph√° b·ªô s∆∞u t·∫≠p tr√°i c√¢y t∆∞∆°i ngon, gi√†u dinh d∆∞·ª°ng ƒë∆∞·ª£c ch·ªçn l·ªçc k·ªπ c√†ng</p>
                <div class="d-flex justify-content-center gap-3 mb-4">
                    <span class="vitamin-badge">Vitamin C</span>
                    <span class="vitamin-badge">Vitamin A</span>
                    <span class="vitamin-badge">Ch·∫•t x∆°</span>
                    <span class="vitamin-badge">Kali</span>
                    <span class="vitamin-badge">Folate</span>
                </div>
            </div>
        </div>
        <div class="row" id="product-grid">
            {{#each products}}
            <div class="col-lg-3 col-md-4 col-sm-6 mb-4 product-item" data-category="{{this.categorySlug}}" data-price="{{this.price}}" data-name="{{this.name}}" data-rating="{{this.rating}}" data-freshness="{{this.freshness}}">
                <div class="product-card position-relative">
                    {{#if this.discount}}
                    <div class="discount-badge">üî•-{{this.discount}}%</div>
                    {{/if}}
                    
                    {{#if this.isFresh}}
                    <div class="fresh-badge">‚ú® T∆∞∆°i ngon</div>
                    {{/if}}
                    
                    <div class="position-relative overflow-hidden">
                        <img src="{{this.imageURL.[0].thumbnail}}" alt="{{this.name}}" class="product-image">
                        <!-- Wishlist button ·ªü g√≥c tr√™n b√™n ph·∫£i -->
                        <div class="position-absolute top-0 end-0 p-2">
                            <button class="btn btn-light btn-sm rounded-circle wishlist-btn" 
                                    onclick="toggleWishlist(event,'{{this._id}}', '{{this.name}}')"
                                    title="Th√™m v√†o danh s√°ch y√™u th√≠ch">
                                <i class="far fa-heart"></i>
                            </button>
                        </div>
                    </div>
                    
                    <div class="p-3">
                        <div class="d-flex align-items-center mb-2">
                            <div class="rating me-2">
                                {{#repeat this.rating.average}}
                                ‚≠ê
                                {{/repeat}}
                            </div>
                            <small class="text-muted">({{this.rating.count}} ƒë√°nh gi√°)</small>
                        </div>
                        
                        <h5 class="product-title">{{this.icon}} {{this.name}}</h5>
                        
                        <p class="text-muted small mb-2">{{this.sortDescription}}</p>
                        
                        {{#if this.nutritionFacts.vitamins}}
                        <div class="mb-3">
                            {{#each this.nutritionFacts.vitamins}}
                            <span class="vitamin-badge">{{this}}</span>
                            {{/each}}
                        </div>
                        {{/if}}
                        
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <div>
                                {{#if (gt this.discount 0)}}
                                <span class="product-old-price me-2">{{formatMoney this.price}}</span>
                                <span class="product-price">{{formatMoney this.priceHaveDiscount}}</span>
                                {{else}}
                                <span class="product-price">{{formatMoney this.price}}</span>
                                {{/if}}
                            </div>
                            {{#if this.stockQuantity}}
                            <small class="text-success">
                                ‚úÖ C√≤n h√†ng
                            </small>
                            {{else}}
                            <small class="text-danger">
                                ‚ùå H·∫øt h√†ng
                            </small>
                            {{/if}}
                        </div>
                        
                        <div class="mb-2">
                            <small class="text-muted">
                                üå± Xu·∫•t x·ª©: {{this.origin}}
                            </small>
                            {{#if this.unit}}
                            <br><small class="text-muted">
                                ‚öñÔ∏è Tr·ªçng l∆∞·ª£ng: {{this.unit}}
                            </small>
                            {{/if}}
                        </div>
                        
                        <div class="d-grid gap-2">
                            {{#if this.stockQuantity}}
                            <button class="btn btn-primary" onclick="addToCart('{{this._id}}', '{{this.name}}')">
                                üõí Th√™m v√†o gi·ªè
                            </button>
                            {{else}}
                            <button class="btn btn-secondary" disabled>
                                üòî H·∫øt h√†ng
                            </button>
                            {{/if}}
                            
                            <!-- Row ch·ª©a 2 button nh·ªè -->
                            <div class="d-flex gap-2">
                                <a href="/products/{{this.slug}}" class="btn btn-outline-primary btn-sm flex-fill">
                                    üëÅÔ∏è Xem chi ti·∫øt
                                </a>
                                <button class="btn btn-outline-danger btn-sm wishlist-btn-small" 
                                        onclick="toggleWishlist(event, '{{this._id}}', '{{this.name}}')"
                                        title="Y√™u th√≠ch">
                                    <i class="far fa-heart"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            {{else}}
            <div class="col-12 text-center py-5">
                <div class="fruit-icon" style="font-size: 4rem;">üçéüíî</div>
                <h3 class="text-muted mt-3">Kh√¥ng c√≥ tr√°i c√¢y n√†o</h3>
                <p class="text-muted">Hi·ªán t·∫°i ch∆∞a c√≥ tr√°i c√¢y t∆∞∆°i n√†o ƒë∆∞·ª£c hi·ªÉn th·ªã. Vui l√≤ng quay l·∫°i sau!</p>
            </div>
            {{/each}}
        </div>

        {{#if showLoadMore}}
        <div class="text-center mt-5">
            <button class="btn btn-outline-primary btn-lg" onclick="loadMoreProducts()">
                üçá Xem th√™m tr√°i c√¢y ngon
            </button>
        </div>
        {{/if}}
    </div>
</section>

<!-- Features Section -->
<section id="features" class="py-5 bg-light">
    <div class="container">
        <div class="row mb-5">
            <div class="col-12 text-center">
                <h3 class="display-6 fw-bold mb-3">üåü T·∫°i sao ch·ªçn ch√∫ng t√¥i?</h3>
                <p class="lead text-muted">Cam k·∫øt mang ƒë·∫øn tr·∫£i nghi·ªám mua s·∫Øm tr√°i c√¢y t·ªët nh·∫•t</p>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-3 col-md-6 mb-4">
                <div class="text-center">
                    <div class="bg-primary text-white rounded-circle d-inline-flex align-items-center justify-content-center mb-3" style="width: 80px; height: 80px; font-size: 2rem;">
                        üöö
                    </div>
                    <h5>Giao h√†ng si√™u nhanh</h5>
                    <p class="text-muted">Giao h√†ng trong 2h t·∫°i n·ªôi th√†nh, ƒë·∫£m b·∫£o tr√°i c√¢y lu√¥n t∆∞∆°i ngon</p>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-4">
                <div class="text-center">
                    <div class="bg-primary text-white rounded-circle d-inline-flex align-items-center justify-content-center mb-3" style="width: 80px; height: 80px; font-size: 2rem;">
                        ‚ú®
                    </div>
                    <h5>100% t∆∞∆°i ngon</h5>
                    <p class="text-muted">Cam k·∫øt tr√°i c√¢y t∆∞∆°i ngon, ho√†n ti·ªÅn 100% n·∫øu kh√¥ng h√†i l√≤ng</p>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-4">
                <div class="text-center">
                    <div class="bg-primary text-white rounded-circle d-inline-flex align-items-center justify-content-center mb-3" style="width: 80px; height: 80px; font-size: 2rem;">
                        üåø
                    </div>
                    <h5>Organic & An to√†n</h5>
                    <p class="text-muted">Tr√°i c√¢y organic, kh√¥ng h√≥a ch·∫•t ƒë·ªôc h·∫°i, an to√†n cho s·ª©c kh·ªèe</p>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-4">
                <div class="text-center">
                    <div class="bg-primary text-white rounded-circle d-inline-flex align-items-center justify-content-center mb-3" style="width: 80px; height: 80px; font-size: 2rem;">
                        üí∞
                    </div>
                    <h5>Gi√° c·∫£ h·ª£p l√Ω</h5>
                    <p class="text-muted">Gi√° tr·ª±c ti·∫øp t·ª´ v∆∞·ªùn, ti·∫øt ki·ªám chi ph√≠ trung gian</p>
                </div>
            </div>
        </div>
        
        <!-- Health Benefits Section -->
        <div class="row mt-5">
            <div class="col-12 text-center mb-4">
                <h4 class="fw-bold">üçé L·ª£i √≠ch s·ª©c kh·ªèe t·ª´ tr√°i c√¢y</h4>
            </div>
            <div class="col-md-4 mb-3">
                <div class="d-flex align-items-center">
                    <span style="font-size: 2rem;">üí™</span>
                    <div class="ms-3">
                        <h6 class="mb-1">TƒÉng c∆∞·ªùng mi·ªÖn d·ªãch</h6>
                        <small class="text-muted">Gi√†u Vitamin C, ch·ªëng oxy h√≥a</small>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <div class="d-flex align-items-center">
                    <span style="font-size: 2rem;">‚ù§Ô∏è</span>
                    <div class="ms-3">
                        <h6 class="mb-1">T·ªët cho tim m·∫°ch</h6>
                        <small class="text-muted">Ch·∫•t x∆°, kali gi√∫p ·ªïn ƒë·ªãnh huy·∫øt √°p</small>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <div class="d-flex align-items-center">
                    <span style="font-size: 2rem;">üß†</span>
                    <div class="ms-3">
                        <h6 class="mb-1">C·∫£i thi·ªán tr√≠ n√£o</h6>
                        <small class="text-muted">Folate, ch·∫•t ch·ªëng oxy h√≥a t·ª± nhi√™n</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
async function isLoggedIn() {
    try {
        const res = await fetch('/auth/verify-token', {
            method: 'POST',
            credentials: 'include', // B·∫ÆT BU·ªòC ƒë·ªÉ g·ª≠i cookie l√™n server
        });

        const data = await res.json();
        return data.success === true;
    } catch (err) {
        return false;
    }
}
// Product filtering and sorting functions
function filterProducts(category) {
    const products = document.querySelectorAll('.product-item');
    const buttons = document.querySelectorAll('.btn-group button');
    
    // Update active button
    buttons.forEach(btn => btn.classList.remove('active'));
    event.target.classList.add('active');
    
    // Show/hide products
    products.forEach(product => {
        if (category === 'all' || product.dataset.category === category) {
            product.style.display = 'block';
        } else {
            product.style.display = 'none';
        }
    });
}

function sortProducts(sortBy) {
    const container = document.getElementById('product-grid');
    const products = Array.from(container.querySelectorAll('.product-item'));
    
    products.sort((a, b) => {
        switch(sortBy) {
            case 'price-low':
                return parseFloat(a.dataset.price) - parseFloat(b.dataset.price);
            case 'price-high':
                return parseFloat(b.dataset.price) - parseFloat(a.dataset.price);
            case 'name':
                return a.dataset.name.localeCompare(b.dataset.name);
            case 'rating':
                return parseFloat(b.dataset.rating.average) * parseFloat(b.dataset.rating.count) - parseFloat(a.dataset.rating.average) * parseFloat(a.dataset.rating.count);
            default:
                return 0;
        }
    });
    
    // Re-append sorted products
    products.forEach(product => container.appendChild(product));
}

async function toggleWishlist(event, productId, productName) {
    const button = event.target.closest('button');
    const icon = button.querySelector('i');

    // Ki·ªÉm tra ƒëƒÉng nh·∫≠p
    const loggedIn = await isLoggedIn();
    if (!loggedIn) {
        alert('Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ th√™m s·∫£n ph·∫©m v√†o danh s√°ch y√™u th√≠ch!');
        window.location.href = '/auth/login';
        return;
    }

    icon.className = 'fas fa-spinner fa-spin';

    try {
        const res = await fetch('/user/wishlist/toggle', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            credentials: 'include',
            body: JSON.stringify({ productId })
        });

        const data = await res.json();

        if (data.success) {
            if (data.action === 'added') {
                icon.className = 'fas fa-heart';
                button.classList.add('added');
                button.title = 'ƒê√£ th√™m v√†o y√™u th√≠ch';
                showWishlistToast(`üíñ ƒê√£ th√™m "${productName}" v√†o danh s√°ch y√™u th√≠ch!`, 'success');
            } else if (data.action === 'removed') {
                icon.className = 'far fa-heart';
                button.classList.remove('added');
                button.title = 'Th√™m v√†o y√™u th√≠ch';
                showWishlistToast(`üóë ƒê√£ xo√° "${productName}" kh·ªèi danh s√°ch y√™u th√≠ch!`, 'info');
            }
        } else {
            icon.className = 'far fa-heart';
            showWishlistToast('‚ùå ' + data.message, 'error');
        }
    } catch (err) {
        console.error('L·ªói toggle wishlist:', err);
        icon.className = 'far fa-heart';
        showWishlistToast('‚ùå C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i!', 'error');
    } finally {
        button.disabled = false; // Cho ph√©p b·∫•m l·∫°i
    }
}

// Function hi·ªÉn th·ªã toast cho wishlist
function showWishlistToast(message, type = 'success') {
    let toastContainer = document.querySelector('.toast-container');
    if (!toastContainer) {
        toastContainer = document.createElement('div');
        toastContainer.className = 'toast-container position-fixed bottom-0 end-0 p-3';
        document.body.appendChild(toastContainer);
    }

    const toast = document.createElement('div');
    let bgClass = 'bg-success';
    if (type === 'error') bgClass = 'bg-danger';
    if (type === 'info') bgClass = 'bg-info';
    
    toast.className = `toast align-items-center text-white ${bgClass} border-0`;
    toast.setAttribute('role', 'alert');

    toast.innerHTML = `
        <div class="d-flex">
            <div class="toast-body">
                ${message}
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
        </div>
    `;
    
    toastContainer.appendChild(toast);

    const bootstrapToast = new bootstrap.Toast(toast, { delay: 3000 });
    bootstrapToast.show();

    toast.addEventListener('hidden.bs.toast', () => {
        toast.remove();
    });
}

// Check wishlist status on page load
document.addEventListener('DOMContentLoaded', async () => {
    updateCartCount();
    await checkWishlistStatus();
});

// Function ki·ªÉm tra tr·∫°ng th√°i wishlist c·ªßa c√°c s·∫£n ph·∫©m
async function checkWishlistStatus() {
    const loggedIn = await isLoggedIn();
    if (!loggedIn) return;

    try {
        const res = await fetch('/user/wishlist', {
            credentials: 'include'
        });
        
        const data = await res.json();
        if (data.success && data.wishlist) {
            // C·∫≠p nh·∫≠t UI cho c√°c s·∫£n ph·∫©m ƒë√£ c√≥ trong wishlist
            data.wishlist.forEach(item => {
                const buttons = document.querySelectorAll(`[onclick*="${item}"]`);
                buttons.forEach(button => {
                    if (button.classList.contains('wishlist-btn') || button.classList.contains('wishlist-btn-small')) {
                        const icon = button.querySelector('i');
                        icon.className = 'fas fa-heart';
                        button.classList.add('added');
                        button.title = 'ƒê√£ c√≥ trong y√™u th√≠ch';
                    }
                });
            });
        }
    } catch (err) {
        console.error('L·ªói khi ki·ªÉm tra wishlist:', err);
    }
}

function loadMoreProducts() {
    // Simulate loading more products
    alert('üçé ƒêang t·∫£i th√™m tr√°i c√¢y t∆∞∆°i ngon cho b·∫°n!');
}

async function addToCart(productId, productName) {
    try{
        const res = await fetch('/cart/add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            credentials: 'include',
            body: JSON.stringify({
                productId,
                quantity: 1
            }),
        });

        const data = await res.json();

        if (!data.success) {
            alert('Kh√¥ng th·ªÉ th√™m v√†o gi·ªè: ' + data.message);
            return
        }
        updateCartCount(); 
        showCartToast(productName);
    } catch (err){
        alert('‚ùå L·ªói khi th√™m v√†o gi·ªè h√†ng!');
        console.error(err);
    }
}



function showCartToast(productName) {
    // Create toast element if it doesn't exist
    let toastContainer = document.querySelector('.toast-container');
    if (!toastContainer) {
        toastContainer = document.createElement('div');
        toastContainer.className = 'toast-container position-fixed bottom-0 end-0 p-3';
        document.body.appendChild(toastContainer);
    }

    // Create toast
    const toast = document.createElement('div');
    toast.className = 'toast align-items-center text-white bg-primary border-0';
    toast.setAttribute('role', 'alert');
    toast.setAttribute('aria-live', 'assertive');
    toast.setAttribute('aria-atomic', 'true');

    toast.innerHTML = `
        <div class="d-flex">
            <div class="toast-body">
                üõí ƒê√£ th√™m "${productName}" v√†o gi·ªè h√†ng!
            </div>
            <button type="button" class="btn‚Äì

close close-toast btn-light" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    `;
    toastContainer.appendChild(toast);

    // Initialize and show toast using Bootstrap
    const bootstrapToast = new bootstrap.Toast(toast, { delay: 3000 });
    bootstrapToast.show();

    // Remove toast from DOM after hiding
    toast.addEventListener('hidden.bs.toast', () => {
        toast.remove();
    });
}

// Initialize cart count on page load
document.addEventListener('DOMContentLoaded', () => {
    updateCartCount();
});
</script>