<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Qu√™n M·∫≠t Kh·∫©u - Fresh Fruits Store</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #ff9a56 0%, #ff6b35 50%, #f7931e 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            position: relative;
            overflow-x: hidden;
        }

        body::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-image: 
                radial-gradient(circle at 20% 80%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.1) 0%, transparent 50%);
            pointer-events: none;
        }

        .fruit-decoration {
            position: absolute;
            font-size: 60px;
            opacity: 0.1;
            animation: float 6s ease-in-out infinite;
            pointer-events: none;
        }

        .fruit-decoration:nth-child(1) { top: 10%; left: 10%; animation-delay: 0s; }
        .fruit-decoration:nth-child(2) { top: 20%; right: 15%; animation-delay: -2s; }
        .fruit-decoration:nth-child(3) { bottom: 15%; left: 5%; animation-delay: -4s; }
        .fruit-decoration:nth-child(4) { bottom: 10%; right: 10%; animation-delay: -1s; }

        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(5deg); }
        }

        .forgot-container {
            background: rgba(255, 255, 255, 0.98);
            backdrop-filter: blur(15px);
            border-radius: 25px;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
            overflow: hidden;
            width: 100%;
            max-width: 450px;
            animation: slideUp 0.8s ease-out;
            position: relative;
            border: 2px solid rgba(255, 255, 255, 0.3);
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(50px) scale(0.9);
            }
            to {
                opacity: 1;
                transform: translateY(0) scale(1);
            }
        }

        .forgot-header {
            background: linear-gradient(135deg, #4CAF50 0%, #8BC34A 50%, #CDDC39 100%);
            color: white;
            padding: 35px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .forgot-header::before {
            content: 'üçéüçäüåøüçáü•ùüçì';
            position: absolute;
            top: -10px;
            left: -20px;
            right: -20px;
            font-size: 30px;
            opacity: 0.2;
            letter-spacing: 30px;
            animation: slideRight 15s linear infinite;
        }

        @keyframes slideRight {
            0% { transform: translateX(-100%); }
            100% { transform: translateX(100%); }
        }

        .forgot-header h1 {
            font-size: 32px;
            margin-bottom: 12px;
            font-weight: 700;
            position: relative;
            z-index: 2;
        }

        .forgot-header p {
            opacity: 0.95;
            font-size: 17px;
            position: relative;
            z-index: 2;
        }

        .forgot-form {
            padding: 45px;
        }

        .form-group {
            margin-bottom: 25px;
        }

        .form-group label {
            display: block;
            margin-bottom: 10px;
            font-weight: 600;
            color: #2E7D32;
            font-size: 15px;
        }

        .input-wrapper {
            position: relative;
        }

        .form-control {
            width: 100%;
            padding: 16px 22px;
            padding-left: 55px;
            border: 2px solid #E8F5E8;
            border-radius: 15px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: #FAFAFA;
        }

        .form-control:focus {
            outline: none;
            border-color: #4CAF50;
            box-shadow: 0 0 0 4px rgba(76, 175, 80, 0.1);
            transform: translateY(-3px);
            background: #fff;
        }

        .input-icon {
            position: absolute;
            left: 20px;
            top: 50%;
            transform: translateY(-50%);
            color: #81C784;
            font-size: 18px;
            transition: all 0.3s ease;
        }

        .form-control:focus + .input-icon {
            color: #4CAF50;
            transform: translateY(-50%) scale(1.1);
        }

        .btn-submit {
            width: 100%;
            padding: 18px;
            background: linear-gradient(135deg, #4CAF50 0%, #8BC34A 50%, #CDDC39 100%);
            color: white;
            border: none;
            border-radius: 15px;
            font-size: 18px;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn-submit::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent, rgba(255,255,255,0.3), transparent);
            transform: rotate(45deg);
            transition: all 0.5s;
            opacity: 0;
        }

        .btn-submit:hover::before {
            animation: shine 0.5s ease-in-out;
        }

        @keyframes shine {
            0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); opacity: 0; }
            50% { opacity: 1; }
            100% { transform: translateX(100%) translateY(100%) rotate(45deg); opacity: 0; }
        }

        .btn-submit:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(76, 175, 80, 0.4);
        }

        .login-link {
            text-align: center;
            margin-top: 30px;
            padding-top: 30px;
            border-top: 2px solid #E8F5E8;
        }

        .login-link a {
            color: #4CAF50;
            text-decoration: none;
            font-weight: 600;
            position: relative;
        }

        .login-link a::after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            bottom: -3px;
            left: 50%;
            background: #4CAF50;
            transition: all 0.3s ease;
        }

        .login-link a:hover::after {
            width: 100%;
            left: 0;
        }

        .error-message {
            color: #FF5722;
            font-size: 13px;
            margin-top: 8px;
            display: none;
            font-weight: 500;
        }

        .store-branding {
            position: absolute;
            top: -15px;
            right: -15px;
            background: linear-gradient(135deg, #FF9800, #FF5722);
            color: white;
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 700;
            box-shadow: 0 5px 15px rgba(255, 152, 0, 0.3);
        }

        .spinner {
            display: none;
            width: 20px;
            height: 20px;
            border: 3px solid #ffffff;
            border-top: 3px solid transparent;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
        }

        @keyframes spin {
            0% { transform: translateY(-50%) rotate(0deg); }
            100% { transform: translateY(-50%) rotate(360deg); }
        }

        .alert-messages {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            width: 90%;
            max-width: 450px;
            z-index: 1000;
        }

        .alert {
            padding: 16px 20px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            animation: slideDown 0.3s ease-out;
            margin-bottom: 20px;
            display: none;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .alert-error {
            background: linear-gradient(135deg, #ffebee 0%, #ffcdd2 100%);
            border: 2px solid #ef5350;
            color: #c62828;
            backdrop-filter: blur(10px);
        }

        .alert-success {
            background: linear-gradient(135deg, #E8F5E9 0%, #C8E6C9 100%);
            border: 2px solid #66BB6A;
            color: #2E7D32;
            backdrop-filter: blur(10px);
        }

        .alert-content {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .alert-icon {
            font-size: 20px;
        }

        .alert-text {
            font-weight: 500;
            font-size: 15px;
        }

        .alert-close {
            background: none;
            border: none;
            color: inherit;
            cursor: pointer;
            padding: 5px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            transition: all 0.3s ease;
        }

        .alert-close:hover {
            background: rgba(0, 0, 0, 0.1);
        }

        @keyframes slideDown {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            10%, 30%, 50%, 70%, 90% { transform: translateX(-2px); }
            20%, 40%, 60%, 80% { transform: translateX(2px); }
        }

        .shake {
            animation: shake 0.5s ease-in-out;
        }

        @media (max-width: 480px) {
            .forgot-container {
                margin: 15px;
            }
            
            .forgot-header {
                padding: 25px 20px;
            }

            .forgot-form {
                padding: 30px 20px;
            }

            .alert-messages {
                width: calc(100% - 30px);
                top: 10px;
            }
        }
    </style>
</head>
<body>
    <!-- Fruit decorations -->
    <div class="fruit-decoration">üçé</div>
    <div class="fruit-decoration">üçä</div>
    <div class="fruit-decoration">üçå</div>
    <div class="fruit-decoration">üçá</div>

    <div class="forgot-container">
        <div class="store-branding">üçì Fresh Store</div>
        
        <div class="forgot-header">
            <h1><i class="fas fa-key"></i> Qu√™n M·∫≠t Kh·∫©u</h1>
            <p>Nh·∫≠p email c·ªßa b·∫°n ƒë·ªÉ l·∫•y l·∫°i m·∫≠t kh·∫©u</p>
        </div>

        <form class="forgot-form" id="forgotForm">
            <div class="form-group">
                <label for="email">Email</label>
                <div class="input-wrapper">
                    <input type="email" id="email" name="email" class="form-control" required placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ email c·ªßa b·∫°n">
                    <i class="fas fa-envelope input-icon"></i>
                </div>
                <div class="error-message" id="emailError"></div>
            </div>

            <button type="submit" class="btn-submit">
                <i class="fas fa-paper-plane"></i> G·ª≠i Y√™u C·∫ßu
                <div class="spinner" id="loadingSpinner"></div>
            </button>

            <div class="login-link">
                <p>ƒê√£ nh·ªõ m·∫≠t kh·∫©u? <a href="/auth/login">üîê ƒêƒÉng nh·∫≠p ngay</a></p>
            </div>
        </form>
    </div>

    <div class="alert-messages">
        <div class="alert alert-error" id="errorAlert">
            <div class="alert-content">
                <i class="fas fa-exclamation-circle alert-icon"></i>
                <span class="alert-text" id="errorMessage"></span>
            </div>
            <button class="alert-close" onclick="hideAlert('error')">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="alert alert-success" id="successAlert">
            <div class="alert-content">
                <i class="fas fa-check-circle alert-icon"></i>
                <span class="alert-text" id="successMessage"></span>
            </div>
            <button class="alert-close" onclick="hideAlert('success')">
                <i class="fas fa-times"></i>
            </button>
        </div>
    </div>

    <script>
        // Form submission
        document.getElementById('forgotForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Reset error messages
            document.querySelectorAll('.error-message').forEach(error => {
                error.style.display = 'none';
            });

            const loadingSpinner = document.getElementById('loadingSpinner');
            const submitButton = document.querySelector('.btn-submit');
            
            loadingSpinner.style.display = 'inline-block';
            submitButton.disabled = true;
            submitButton.style.opacity = '0.7';

            const formData = {
                email: this.email.value
            };

            fetch('/auth/forgot-password', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showAlert('success', 'ƒê√£ g·ª≠i email kh√¥i ph·ª•c m·∫≠t kh·∫©u. Vui l√≤ng ki·ªÉm tra h·ªôp th∆∞ c·ªßa b·∫°n!');
                    document.getElementById('email').value = ''; // Clear the email input
                } else {
                    showAlert('error', data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showAlert('error', 'C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i!');
            })
            .finally(() => {
                loadingSpinner.style.display = 'none';
                submitButton.disabled = false;
                submitButton.style.opacity = '1';
            });
        });

        // Show alert function
        function showAlert(type, message) {
            const alert = document.getElementById(type + 'Alert');
            const messageElement = document.getElementById(type + 'Message');
            messageElement.textContent = message;
            alert.style.display = 'flex';
            alert.classList.add('shake');
            
            // Remove shake animation after it completes
            setTimeout(() => {
                alert.classList.remove('shake');
            }, 500);

            // Auto hide success message after 5 seconds
            if (type === 'success') {
                setTimeout(() => {
                    hideAlert('success');
                }, 5000);
            }
        }

        // Hide alert function
        function hideAlert(type) {
            document.getElementById(type + 'Alert').style.display = 'none';
        }

        // Add floating fruits effect
        function createFloatingFruit() {
            const fruits = ['üçé', 'üçä', 'üçå', 'üçá', 'ü•ù', 'üçì', 'ü•≠', 'üçë'];
            const fruit = document.createElement('div');
            fruit.innerHTML = fruits[Math.floor(Math.random() * fruits.length)];
            fruit.style.position = 'fixed';
            fruit.style.left = Math.random() * 100 + 'vw';
            fruit.style.top = '100vh';
            fruit.style.fontSize = '24px';
            fruit.style.opacity = '0.3';
            fruit.style.pointerEvents = 'none';
            fruit.style.zIndex = '1';
            fruit.style.animation = `floatUp ${3 + Math.random() * 3}s ease-out forwards`;
            document.body.appendChild(fruit);

            setTimeout(() => {
                fruit.remove();
            }, 6000);
        }

        setInterval(createFloatingFruit, 1000);
    </script>
</body>
</html>
