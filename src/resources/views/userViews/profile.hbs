<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Thông Tin Cá Nhân - Fresh Fruits Store</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #4CAF50;
            --primary-dark: #2E7D32;
            --primary-light: #81C784;
            --secondary-color: #FF9800;
            --error-color: #f44336;
            --success-color: #4CAF50;
            --text-color: #333;
            --text-light: #666;
            --border-color: #E8F5E9;
            --bg-gradient: linear-gradient(135deg, #ff9a56 0%, #ff6b35 50%, #f7931e 100%);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: var(--bg-gradient);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .profile-container {
            background: rgba(255, 255, 255, 0.98);
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 900px;
            display: flex;
            overflow: hidden;
        }

        .profile-sidebar {
            width: 280px;
            background: linear-gradient(to bottom, var(--primary-color), var(--primary-dark));
            padding: 40px 20px;
            color: white;
            text-align: center;
        }

        .profile-main {
            flex: 1;
            padding: 40px;
            background: white;
        }

        .profile-avatar {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            border: 4px solid rgba(255, 255, 255, 0.3);
            margin: 0 auto 20px;
            overflow: hidden;
            position: relative;
            cursor: pointer;
        }

        .profile-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .avatar-upload {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: rgba(0, 0, 0, 0.6);
            padding: 8px;
            font-size: 12px;
            opacity: 0;
            transition: opacity 0.3s;
        }

        .profile-avatar:hover .avatar-upload {
            opacity: 1;
        }

        .profile-name {
            font-size: 24px;
            font-weight: 700;
            margin-bottom: 5px;
        }

        .profile-role {
            font-size: 14px;
            opacity: 0.9;
            margin-bottom: 25px;
        }

        .profile-menu {
            list-style: none;
            text-align: left;
        }

        .profile-menu li {
            margin-bottom: 10px;
        }

        .profile-menu a {
            color: white;
            text-decoration: none;
            display: flex;
            align-items: center;
            padding: 12px 15px;
            border-radius: 10px;
            transition: all 0.3s;
        }

        .profile-menu a:hover {
            background: rgba(255, 255, 255, 0.1);
        }

        .profile-menu a.active {
            background: rgba(255, 255, 255, 0.2);
        }

        .profile-menu i {
            margin-right: 10px;
            width: 20px;
            text-align: center;
        }

        .section-title {
            font-size: 24px;
            color: var(--text-color);
            margin-bottom: 30px;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .btn-edit {
            background: var(--primary-color);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s;
        }

        .btn-edit:hover {
            background: var(--primary-dark);
            transform: translateY(-2px);
        }

        .info-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 25px;
        }

        .info-item {
            margin-bottom: 20px;
        }

        .info-label {
            font-size: 14px;
            color: var(--text-light);
            margin-bottom: 8px;
        }

        .info-value {
            font-size: 16px;
            color: var(--text-color);
            font-weight: 500;
        }

        .info-value.verified {
            color: var(--success-color);
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .info-value.not-verified {
            color: var(--error-color);
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }

        .modal-content {
            background: white;
            padding: 30px;
            border-radius: 15px;
            width: 100%;
            max-width: 500px;
            position: relative;
        }

        .modal-close {
            position: absolute;
            top: 15px;
            right: 15px;
            background: none;
            border: none;
            font-size: 20px;
            cursor: pointer;
            color: var(--text-light);
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: var(--text-color);
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 12px;
            border: 2px solid var(--border-color);
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.3s;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
        }

        @media (max-width: 768px) {
            .profile-container {
                flex-direction: column;
            }

            .profile-sidebar {
                width: 100%;
                padding: 30px 20px;
            }

            .profile-avatar {
                width: 120px;
                height: 120px;
            }

            .info-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="profile-container">
        <!-- Sidebar -->
        <div class="profile-sidebar">
            <div class="profile-avatar">
                <img src="{{user.avatar}}" alt="Avatar" id="userAvatar">
                <div class="avatar-upload">
                    <i class="fas fa-camera"></i> Cập nhật ảnh
                </div>
            </div>
            <div class="profile-name">{{user.name}}</div>
            <div class="profile-role">{{user.role}}</div>
            <ul class="profile-menu">
                <li>
                    <a href="#" class="active">
                        <i class="fas fa-user"></i> Thông tin cá nhân
                    </a>
                </li>
                <li>
                    <a href="#">
                        <i class="fas fa-shopping-bag"></i> Đơn hàng của tôi
                    </a>
                </li>
                <li>
                    <a href="#">
                        <i class="fas fa-heart"></i> Sản phẩm yêu thích
                    </a>
                </li>
                <li>
                    <a href="#">
                        <i class="fas fa-address-book"></i> Sổ địa chỉ
                    </a>
                </li>
                <li>
                    <a href="#" onclick="logout()">
                        <i class="fas fa-sign-out-alt"></i> Đăng xuất
                    </a>
                </li>
            </ul>
        </div>

        <!-- Main Content -->
        <div class="profile-main">
            <div class="section-title">
                Thông tin cá nhân
                <button class="btn-edit" onclick="openEditModal()">
                    <i class="fas fa-edit"></i> Chỉnh sửa
                </button>
            </div>

            <div class="info-grid">
                <div class="info-item">
                    <div class="info-label">Họ và tên</div>
                    <div class="info-value">{{user.name}}</div>
                </div>

                <div class="info-item">
                    <div class="info-label">Tên đăng nhập</div>
                    <div class="info-value">{{user.username}}</div>
                </div>

                <div class="info-item">
                    <div class="info-label">Email</div>
                    <div class="info-value {{#if user.isVerified}}verified{{else}}not-verified{{/if}}">
                        {{user.email}}
                        {{#if user.isVerified}}
                            <i class="fas fa-check-circle"></i>
                        {{else}}
                            <i class="fas fa-exclamation-circle"></i>
                        {{/if}}
                    </div>
                </div>

                <div class="info-item">
                    <div class="info-label">Số điện thoại</div>
                    <div class="info-value">{{user.phone}}</div>
                </div>

                <div class="info-item">
                    <div class="info-label">Giới tính</div>
                    <div class="info-value">{{user.gender}}</div>
                </div>

                <div class="info-item">
                    <div class="info-label">Ngày sinh</div>
                    <div class="info-value">{{user.birthday}}</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Modal -->
    <div class="modal" id="editModal">
        <div class="modal-content">
            <button class="modal-close" onclick="closeEditModal()">
                <i class="fas fa-times"></i>
            </button>
            <h2 style="margin-bottom: 20px;">Chỉnh sửa thông tin</h2>
            <form id="editProfileForm">
                <div class="form-group">
                    <label>Họ và tên</label>
                    <input type="text" class="form-control" name="name" value="{{user.name}}">
                </div>
                <div class="form-group">
                    <label>Số điện thoại</label>
                    <input type="tel" class="form-control" name="phone" value="{{user.phone}}">
                </div>
                <div class="form-group">
                    <label>Giới tính</label>
                    <select class="form-control" name="gender">
                        <option value="male" {{#if (eq user.gender "male")}}selected{{/if}}>Nam</option>
                        <option value="female" {{#if (eq user.gender "female")}}selected{{/if}}>Nữ</option>
                        <option value="other" {{#if (eq user.gender "other")}}selected{{/if}}>Khác</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Ngày sinh</label>
                    <input type="date" class="form-control" name="birthday" value="{{user.birthday}}">
                </div>
                <button type="submit" class="btn-edit" style="width: 100%;">
                    <i class="fas fa-save"></i> Lưu thay đổi
                </button>
            </form>
        </div>
    </div>

    <script>
        // Kiểm tra và redirect nếu không có token
        (function checkAuth() {
            const token = localStorage.getItem('accessToken');
            if (!token) {
                window.location.href = '/auth/login';
            }
        })();

        // Thêm interceptor cho tất cả các request
        const originalFetch = window.fetch;
        window.fetch = function() {
            let [url, config] = arguments;
            if (!config) {
                config = {};
            }
            if (!config.headers) {
                config.headers = {};
            }

            // Thêm token vào header
            const token = localStorage.getItem('accessToken');
            if (token) {
                if (config.body instanceof FormData) {
                    // Nếu là FormData (upload file), chỉ thêm Authorization
                    config.headers['Authorization'] = `Bearer ${token}`;
                } else {
                    // Nếu là request thông thường, thêm cả Content-Type
                    config.headers['Authorization'] = `Bearer ${token}`;
                    config.headers['Content-Type'] = 'application/json';
                }
            }

            return originalFetch(url, config)
                .then(response => {
                    // Nếu token hết hạn hoặc không hợp lệ
                    if (response.status === 401 || response.status === 403) {
                        localStorage.removeItem('accessToken');
                        localStorage.removeItem('refreshToken');
                        window.location.href = '/auth/login';
                    }
                    return response;
                });
        };

        // Mở/đóng modal chỉnh sửa
        function openEditModal() {
            document.getElementById('editModal').style.display = 'flex';
        }

        function closeEditModal() {
            document.getElementById('editModal').style.display = 'none';
        }

        // Xử lý form chỉnh sửa
        document.getElementById('editProfileForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            const data = Object.fromEntries(formData);

            fetch('/user/profile/update', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Cập nhật thông tin thành công!');
                    window.location.reload();
                } else {
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi cập nhật thông tin');
            });
        });

        // Xử lý upload avatar
        document.querySelector('.profile-avatar').addEventListener('click', function() {
            const input = document.createElement('input');
            input.type = 'file';
            input.accept = 'image/*';
            input.onchange = function(e) {
                const file = e.target.files[0];
                if (file) {
                    const formData = new FormData();
                    formData.append('avatar', file);

                    fetch('/user/profile/avatar', {
                        method: 'POST',
                        headers: {
                            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`
                        },
                        body: formData
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            document.getElementById('userAvatar').src = data.avatarUrl;
                            alert('Cập nhật ảnh đại diện thành công!');
                        } else {
                            alert(data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Có lỗi xảy ra khi cập nhật ảnh đại diện');
                    });
                }
            };
            input.click();
        });

        // Xử lý đăng xuất
        function logout() {
            const refreshToken = localStorage.getItem('refreshToken');
            
            fetch('/auth/logout', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`
                },
                body: JSON.stringify({ token: refreshToken })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    localStorage.removeItem('accessToken');
                    localStorage.removeItem('refreshToken');
                    window.location.href = '/auth/login';
                } else {
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi đăng xuất');
            });
        }
    </script>
</body>
</html>