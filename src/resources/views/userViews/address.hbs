{{!-- <!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sổ Địa Chỉ - Fresh Fruits Store</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #ff9a56 0%, #ff6b35 50%, #f7931e 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .address-container {
            background: rgba(255, 255, 255, 0.98);
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 900px;
            padding: 30px;
            backdrop-filter: blur(10px);
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 2px solid #E8F5E9;
        }

        .header h1 {
            color: #2E7D32;
            font-size: 24px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .btn-add {
            background: linear-gradient(135deg, #4CAF50, #8BC34A);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 12px;
            font-size: 15px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s;
        }

        .btn-add:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(76, 175, 80, 0.3);
        }

        .address-list {
            display: grid;
            gap: 20px;
        }

        .address-card {
            background: white;
            border-radius: 15px;
            padding: 20px;
            border: 2px solid #E8F5E9;
            position: relative;
            transition: all 0.3s;
        }

        .address-card:hover {
            border-color: #4CAF50;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .default-badge {
            position: absolute;
            top: -10px;
            right: -10px;
            background: #4CAF50;
            color: white;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
        }

        .address-info {
            margin-bottom: 15px;
        }

        .recipient {
            font-weight: 600;
            color: #333;
            font-size: 16px;
            margin-bottom: 5px;
        }

        .address-text {
            color: #666;
            line-height: 1.5;
        }

        .address-actions {
            display: flex;
            gap: 10px;
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid #E8F5E9;
        }

        .btn-action {
            padding: 8px 15px;
            border-radius: 8px;
            font-size: 14px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 5px;
            transition: all 0.3s;
            border: none;
        }

        .btn-edit {
            background: #E8F5E9;
            color: #2E7D32;
        }

        .btn-delete {
            background: #FFEBEE;
            color: #C62828;
        }

        .btn-default {
            background: #E3F2FD;
            color: #1565C0;
        }

        .btn-action:hover {
            filter: brightness(0.95);
            transform: translateY(-1px);
        }

        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            align-items: center;
            justify-content: center;
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background: white;
            padding: 30px;
            border-radius: 20px;
            width: 90%;
            max-width: 500px;
            animation: slideUp 0.3s ease;
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .modal-title {
            font-size: 20px;
            color: #2E7D32;
        }

        .modal-close {
            background: none;
            border: none;
            font-size: 20px;
            cursor: pointer;
            color: #666;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #333;
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 12px;
            border: 2px solid #E8F5E9;
            border-radius: 8px;
            font-size: 15px;
            transition: all 0.3s;
        }

        .form-control:focus {
            outline: none;
            border-color: #4CAF50;
            box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
        }

        .checkbox-group {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-top: 15px;
        }

        /* Alert styles */
        .alert-messages {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            width: 90%;
            max-width: 500px;
            z-index: 1100;
        }

        .alert {
            padding: 16px 20px;
            border-radius: 12px;
            display: none;
            align-items: center;
            justify-content: space-between;
            animation: slideDown 0.3s ease-out;
            margin-bottom: 15px;
            backdrop-filter: blur(10px);
        }

        .alert-success {
            background: linear-gradient(135deg, #E8F5E9 0%, #C8E6C9 100%);
            border: 2px solid #81C784;
            color: #2E7D32;
        }

        .alert-error {
            background: linear-gradient(135deg, #ffebee 0%, #ffcdd2 100%);
            border: 2px solid #ef5350;
            color: #c62828;
        }

        @media (max-width: 768px) {
            .address-container {
                margin: 15px;
                padding: 20px;
            }

            .header {
                flex-direction: column;
                gap: 15px;
                align-items: flex-start;
            }

            .modal-content {
                margin: 15px;
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <!-- Alert Messages -->
    <div class="alert-messages">
        <div class="alert alert-success" id="successAlert">
            <div class="alert-content">
                <i class="fas fa-check-circle alert-icon"></i>
                <span class="alert-text" id="successMessage"></span>
            </div>
            <button class="alert-close" onclick="hideAlert('successAlert')">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="alert alert-error" id="errorAlert">
            <div class="alert-content">
                <i class="fas fa-exclamation-circle alert-icon"></i>
                <span class="alert-text" id="errorMessage"></span>
            </div>
            <button class="alert-close" onclick="hideAlert('errorAlert')">
                <i class="fas fa-times"></i>
            </button>
        </div>
    </div>

    <div class="address-container">
        <div class="header">
            <h1><i class="fas fa-map-marker-alt"></i> Sổ Địa Chỉ</h1>
            <button class="btn-add" onclick="openAddModal()">
                <i class="fas fa-plus"></i> Thêm địa chỉ mới
            </button>
        </div>

        <div class="address-list">
            {{#each addresses}}
            <div class="address-card">
                {{#if isDefault}}
                <div class="default-badge">Mặc định</div>
                {{/if}}
                <div class="address-info">
                    <div class="recipient">{{recipientName}}</div>
                    <div class="address-text">
                        {{addressLine}}, {{ward}}, {{city}}
                    </div>
                </div>
                <div class="address-actions">
                    <button class="btn-action btn-edit" onclick="openEditModal('{{_id}}')">
                        <i class="fas fa-edit"></i> Sửa
                    </button>
                    <button class="btn-action btn-delete" onclick="deleteAddress('{{_id}}')">
                        <i class="fas fa-trash"></i> Xóa
                    </button>
                    {{#unless isDefault}}
                    <button class="btn-action btn-default" onclick="setDefaultAddress('{{_id}}')">
                        <i class="fas fa-check"></i> Đặt mặc định
                    </button>
                    {{/unless}}
                </div>
            </div>
            {{/each}}
        </div>
    </div>

    <!-- Add/Edit Address Modal -->
    <div class="modal" id="addressModal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="modalTitle">Thêm địa chỉ mới</h2>
                <button class="modal-close" onclick="closeModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <form id="addressForm">
                <input type="hidden" id="addressId">
                <div class="form-group">
                    <label for="recipientName">Tên người nhận</label>
                    <input type="text" id="recipientName" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="addressLine">Địa chỉ</label>
                    <input type="text" id="addressLine" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="ward">Phường/Xã</label>
                    <input type="text" id="ward" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="city">Quận/Huyện, Tỉnh/Thành phố</label>
                    <input type="text" id="city" class="form-control" required>
                </div>
                <div class="checkbox-group">
                    <input type="checkbox" id="isDefault">
                    <label for="isDefault">Đặt làm địa chỉ mặc định</label>
                </div>
                <button type="submit" class="btn-add" style="width: 100%; margin-top: 20px;">
                    <i class="fas fa-save"></i> Lưu địa chỉ
                </button>
            </form>
        </div>
    </div>

    <script>
        // Alert functions
        function showAlert(type, message) {
            const alertId = type === 'success' ? 'successAlert' : 'errorAlert';
            const alert = document.getElementById(alertId);
            const messageElement = document.getElementById(type === 'success' ? 'successMessage' : 'errorMessage');
            
            messageElement.textContent = message;
            alert.style.display = 'flex';
            alert.classList.add('shake');
            
            setTimeout(() => {
                alert.classList.remove('shake');
            }, 500);

            if (type === 'success') {
                setTimeout(() => {
                    hideAlert(alertId);
                }, 3000);
            }
        }

        function hideAlert(alertId) {
            document.getElementById(alertId).style.display = 'none';
        }

        // Modal functions
        function openAddModal() {
            document.getElementById('modalTitle').textContent = 'Thêm địa chỉ mới';
            document.getElementById('addressForm').reset();
            document.getElementById('addressId').value = '';
            document.getElementById('addressModal').style.display = 'flex';
        }

        function openEditModal(addressId) {
            document.getElementById('modalTitle').textContent = 'Chỉnh sửa địa chỉ';
            document.getElementById('addressId').value = addressId;
            
            // Fetch address details and populate form
            fetch(`/user/address/${addressId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const address = data.address;
                        document.getElementById('recipientName').value = address.recipientName;
                        document.getElementById('addressLine').value = address.addressLine;
                        document.getElementById('ward').value = address.ward;
                        document.getElementById('city').value = address.city;
                        document.getElementById('isDefault').checked = address.isDefault;
                        document.getElementById('addressModal').style.display = 'flex';
                    } else {
                        showAlert('error', data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showAlert('error', 'Có lỗi xảy ra khi tải thông tin địa chỉ');
                });
        }

        function closeModal() {
            document.getElementById('addressModal').style.display = 'none';
        }

        // Form submission
        document.getElementById('addressForm').addEventListener('submit', function(e) {
            e.preventDefault();

            const addressId = document.getElementById('addressId').value;
            const formData = {
                recipientName: document.getElementById('recipientName').value,
                addressLine: document.getElementById('addressLine').value,
                ward: document.getElementById('ward').value,
                city: document.getElementById('city').value,
                isDefault: document.getElementById('isDefault').checked
            };

            const url = addressId ? `/user/address/${addressId}` : '/user/address';
            const method = addressId ? 'PUT' : 'POST';

            fetch(url, {
                method: method,
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showAlert('success', data.message);
                    closeModal();
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    showAlert('error', data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showAlert('error', 'Có lỗi xảy ra khi lưu địa chỉ');
            });
        });

        // Delete address
        function deleteAddress(addressId) {
            if (confirm('Bạn có chắc chắn muốn xóa địa chỉ này?')) {
                fetch(`/user/address/${addressId}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showAlert('success', data.message);
                        setTimeout(() => {
                            window.location.reload();
                        }, 1000);
                    } else {
                        showAlert('error', data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showAlert('error', 'Có lỗi xảy ra khi xóa địa chỉ');
                });
            }
        }

        // Set default address
        function setDefaultAddress(addressId) {
            fetch(`/user/address/${addressId}/default`, {
                method: 'PUT'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showAlert('success', data.message);
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    showAlert('error', data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showAlert('error', 'Có lỗi xảy ra khi đặt địa chỉ mặc định');
            });
        }
    </script>
</body>
</html> --}}