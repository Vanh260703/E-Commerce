{{!-- CSS cho trang gi·ªè h√†ng --}}
<style>
    .cart-container {
        max-width: 1200px;
        margin: 20px auto;
        padding: 0 15px;
    }

    .cart-header {
        background: linear-gradient(45deg, #ff6b6b, #ffa500);
        color: white;
        padding: 30px;
        border-radius: 15px 15px 0 0;
        text-align: center;
        margin-bottom: 0;
    }

    .cart-header h1 {
        font-size: 2.2em;
        margin-bottom: 10px;
    }

    .cart-header .subtitle {
        font-size: 1.1em;
        opacity: 0.9;
    }

    .cart-content {
        background: white;
        padding: 30px;
        border-radius: 0 0 15px 15px;
        box-shadow: 0 5px 20px rgba(0,0,0,0.1);
    }

    .empty-cart {
        text-align: center;
        padding: 60px 20px;
    }

    .empty-cart i {
        font-size: 4em;
        color: #ddd;
        margin-bottom: 20px;
    }

    .empty-cart h3 {
        color: #666;
        margin-bottom: 15px;
        font-size: 1.4em;
    }

    .cart-item {
        display: flex;
        align-items: center;
        padding: 20px;
        border: 2px solid #f0f0f0;
        border-radius: 12px;
        margin-bottom: 15px;
        transition: all 0.3s ease;
        background: #fafafa;
    }

    .cart-item:hover {
        border-color: #ff6b6b;
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.08);
    }

    .item-image {
        width: 70px;
        height: 70px;
        border-radius: 8px;
        object-fit: cover;
        margin-right: 15px;
        border: 2px solid #fff;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .item-info {
        flex: 1;
    }

    .item-name {
        font-size: 1.2em;
        font-weight: 600;
        color: #333;
        margin-bottom: 5px;
    }

    .item-price {
        color: #ff6b6b;
        font-size: 1em;
        font-weight: 600;
    }

    .quantity-section {
        display: flex;
        align-items: center;
        gap: 8px;
        margin: 0 15px;
    }

    .qty-btn {
        width: 32px;
        height: 32px;
        border: none;
        border-radius: 6px;
        background: #ff6b6b;
        color: white;
        cursor: pointer;
        transition: all 0.2s ease;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .qty-btn:hover {
        background: #ff5252;
        transform: scale(1.05);
    }

    .qty-display {
        font-size: 1.1em;
        font-weight: 600;
        min-width: 25px;
        text-align: center;
    }

    .item-subtotal {
        font-size: 1.2em;
        font-weight: 600;
        color: #333;
        margin: 0 15px;
        min-width: 80px;
        text-align: right;
    }

    .remove-item {
        background: #e74c3c;
        color: white;
        border: none;
        width: 36px;
        height: 36px;
        border-radius: 50%;
        cursor: pointer;
        transition: all 0.2s ease;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .remove-item:hover {
        background: #c0392b;
        transform: scale(1.05);
    }

    .cart-summary {
        background: #f8f9fa;
        padding: 25px;
        border-radius: 12px;
        margin-top: 25px;
        border: 2px solid #e9ecef;
    }

    .summary-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 8px 0;
        font-size: 1.1em;
    }

    .summary-row.total {
        border-top: 2px solid #dee2e6;
        margin-top: 15px;
        padding-top: 15px;
        font-size: 1.3em;
        font-weight: 700;
        color: #333;
    }

    .checkout-section {
        text-align: center;
        margin-top: 25px;
    }

    .btn-primary {
        background: linear-gradient(45deg, #ff6b6b, #ffa500);
        color: white;
        padding: 15px 40px;
        border: none;
        border-radius: 25px;
        font-size: 1.1em;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
        margin: 5px;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(255, 107, 107, 0.3);
    }

    .btn-secondary {
        background: #6c757d;
        color: white;
        padding: 12px 30px;
        border: none;
        border-radius: 20px;
        font-size: 1em;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
        margin: 5px;
    }

    .btn-secondary:hover {
        background: #5a6268;
        transform: translateY(-1px);
    }

    @media (max-width: 768px) {
        .cart-item {
            flex-direction: column;
            text-align: center;
            gap: 10px;
        }
        
        .item-image {
            margin: 0;
        }
        
        .quantity-section, .item-subtotal {
            margin: 0;
        }
    }
</style>

{{!-- N·ªôi dung trang gi·ªè h√†ng --}}
<div class="cart-container">
    <div class="cart-header">
        <h1><i class="fas fa-shopping-cart"></i> Gi·ªè H√†ng</h1>
        <p class="subtitle">Tr√°i c√¢y t∆∞∆°i ngon - Giao h√†ng t·∫≠n n∆°i</p>
    </div>

    <div class="cart-content">
        {{#if cartItems}}
            {{!-- Danh s√°ch s·∫£n ph·∫©m trong gi·ªè --}}
            <div class="cart-items">
                {{#each cartItems}}
                {{#if (gt this.quantity 0)}}
                <div class="cart-item" data-id="{{this.id}}">
                    <img src="{{this.product.imageURL.[0].thumbnail}}" alt="{{this.name}}" class="item-image">
                    
                    <div class="item-info">
                        <h3 class="item-name">{{this.name}}</h3>
                        <p class="item-price">
                            {{#if this.product.discount}}
                                <span class="text-muted text-decoration-line-through me-2">
                                    {{formatMoney this.product.price}}
                                </span>
                                <span class="text-danger fw-bold">
                                    {{formatMoney this.product.priceHaveDiscount}}
                                </span>
                            {{else}}
                                <span class="fw-bold">
                                    {{formatMoney this.product.price}}
                                </span>
                            {{/if}}
                            /{{this.product.unit}}
                        </p>
                    </div>

                    <div class="quantity-section">
                        <button class="qty-btn" onclick="updateQuantity('{{this._id}}', -1)">
                            <i class="fas fa-minus"></i>
                        </button>
                        <span class="qty-display">{{this.quantity}}</span>
                        <button class="qty-btn" onclick="updateQuantity('{{this._id}}', 1)">
                            <i class="fas fa-plus"></i>
                        </button>
                    </div>

                    <div class="item-subtotal">
                        {{formatMoney this.subtotal}}
                    </div>

                    <button class="remove-item" onclick="removeItem('{{this._id}}')" title="X√≥a s·∫£n ph·∫©m">
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
                {{/if}}
                {{/each}}
            </div>

             <div class="mt-4">
                <button type="button" class="btn btn-outline-primary" onclick="showVoucherModal({{totalPrice}})">
                    <i class="fas fa-ticket-alt me-2"></i>Th√™m Voucher
                </button>
            </div>

    {{!-- N·∫øu gi·ªè h√†ng c√≥ s·∫£n ph·∫©m --}}
    {{#if cartItems.length}}

    {{!-- T·ªïng k·∫øt gi·ªè h√†ng --}}
    <div class="cart-summary">
        <div class="summary-row">
            <span>T·ªïng ti·ªÅn c·∫ßn thanh to√°n:</span>
            <span>{{formatMoney totalPrice}}</span>
        </div>
        <div class="summary-row">
            <span>Gi·∫£m gi√°:</span>
            <span style="color: #27ae60;" id="discount-amount" value="0">-0</span>
        </div>
        <div class="summary-row total">
            <span>T·ªïng c·ªông:</span>
            <span id="total-price" value="0">{{formatMoney totalPrice}}</span>
        </div>
    </div>

    {{!-- C√°c n√∫t h√†nh ƒë·ªông --}}
    <div class="checkout-section">
        <a href="/order?subtotal={{totalPrice}}&totalQuantity={{totalQuantity}}" id = "pay-now"class="btn-primary">
            <i class="fas fa-credit-card"></i> Thanh To√°n Ngay
        </a>
        <a href="/products" class="btn-secondary">
            <i class="fas fa-arrow-left"></i> Ti·∫øp T·ª•c Mua H√†ng
        </a>
    </div>

    {{!-- N·∫øu gi·ªè h√†ng r·ªóng --}}
    {{else}}
        <p style="text-align:center; margin: 20px 0;">üõí Ch∆∞a c√≥ s·∫£n ph·∫©m n√†o trong gi·ªè h√†ng</p>
        <div style="text-align:center;">
            <a href="/" class="btn-primary">
                <i class="fas fa-home"></i> V·ªÅ Trang Ch·ªß
            </a>
        </div>
    {{/if}}
    {{else}}
        {{!-- Gi·ªè h√†ng tr·ªëng --}}
        <div class="empty-cart">
            <i class="fas fa-shopping-cart"></i>
            <h3>Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng</h3>
            <p style="color: #888; margin-bottom: 25px;">H√£y th√™m m·ªôt s·ªë tr√°i c√¢y t∆∞∆°i ngon v√†o gi·ªè h√†ng nh√©!</p>
            <a href="/products" class="btn-primary">
                <i class="fas fa-apple-alt"></i> Mua Tr√°i C√¢y Ngay
            </a>
        </div>
    {{/if}}
    </div>
</div>

<!-- Modal danh s√°ch voucher -->
<div class="modal fade" id="voucherModal" tabindex="-1" aria-labelledby="voucherModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="voucherModalLabel">Ch·ªçn Voucher √Åp D·ª•ng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="voucherListContent">
                <!-- Danh s√°ch voucher s·∫Ω ƒë∆∞·ª£c t·∫£i b·∫±ng AJAX -->
                <div class="text-center p-4"><i class="fas fa-spinner fa-spin"></i> ƒêang t·∫£i...</div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ƒê√≥ng</button>
                <button type="button" class="btn btn-primary" id="applyVoucherBtn" disabled>√Åp d·ª•ng Voucher</button>
            </div>
        </div>
    </div>
</div>

{{!-- JavaScript cho c√°c ch·ª©c nƒÉng gi·ªè h√†ng --}}
<script>
    
    // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
    function updateQuantity(itemId, change) {
        // G·ª≠i request AJAX ƒë·ªÉ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng
        fetch('/cart/update', {
            method: 'PATCH',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                itemId: itemId,
                change: change
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload(); // Reload trang ƒë·ªÉ c·∫≠p nh·∫≠t
            } else {
                alert(data.message ||'C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i!');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i!');
        });
    }

    // X√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè
    function removeItem(itemId) {
        if (confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a s·∫£n ph·∫©m n√†y kh·ªèi gi·ªè h√†ng?')) {
            fetch('/cart/remove', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    itemId: itemId
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert(data.message ||'C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i!');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i!');
            });
        }
    }


    // Animation khi hover v√†o items
    document.addEventListener('DOMContentLoaded', function() {
        const cartItems = document.querySelectorAll('.cart-item');
        cartItems.forEach(item => {
            item.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-2px)';
            });
            item.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0)';
            });
        });
    });

    // H√†m hi·ªÉn th·ªã modal voucher
    function showVoucherModal(totalPrice) {
        const modal = new bootstrap.Modal(document.getElementById('voucherModal'));
        const content = document.getElementById('voucherListContent');
        const applyBtn = document.getElementById('applyVoucherBtn');

        // T·∫£i danh s√°ch voucher
        content.innerHTML = '<div class="text-center p-4"><i class="fas fa-spinner fa-spin"></i> ƒêang t·∫£i...</div>';
        Promise.all([
            fetch(`/vouchers/available?totalPrice=${totalPrice}`).then(response => response.json()),
            fetch('/vouchers/').then(response => response.json())
        ])
        .then(([availableResponse, allResponse]) => {
            if (availableResponse.success && allResponse.success) {
                const availableVouchers = availableResponse.vouchers || [];
                const allVouchers = allResponse.vouchers || [];

                let html = '';
                if (availableVouchers.length > 0) {
                    html += '<h5 class="text-lg font-semibold mb-2">Voucher Kh·∫£ D·ª•ng</h5>';
                    html += '<ul class="list-group mb-4">';
                    html += availableVouchers.map(voucher => `
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <div>
                                <strong>${voucher.code}</strong> - Gi·∫£m ${voucher.discountType === 'percent' ? voucher.discountValue + '%' : voucher.discountValue.toLocaleString('vi-VN') + 'ƒë'}
                                <br><small>ƒê·∫øn: ${formatDate(voucher.expiryDate)}</small>
                            </div>
                            <input type="radio" name="selectedVoucher" value="${voucher._id}" class="form-check-input" onchange="enableApplyBtn(${totalPrice})">
                        </li>
                    `).join('');
                    html += '</ul>';
                }

                if (allVouchers.length > 0) {
                    if (html) html += '<hr class="my-4">';
                    html += '<h5 class="text-lg font-semibold mb-2">Voucher Kh√¥ng Kh·∫£ D·ª•ng</h5>';
                    html += '<ul class="list-group">';
                    html += allVouchers
                        .filter(v => !availableVouchers.some(av => av._id === v._id))
                        .map(voucher => `
                            <li class="list-group-item d-flex justify-content-between align-items-center opacity-50" style="pointer-events: none;">
                                <div>
                                    <strong>${voucher.code}</strong> - Gi·∫£m ${voucher.discountType === 'percent' ? voucher.discountValue + '%' : voucher.discountValue.toLocaleString('vi-VN') + 'ƒë'}
                                    <br><small>ƒê·∫øn: ${formatDate(voucher.expiryDate)}</small>
                                    <br><small class="text-red-500">Kh√¥ng ƒë·ªß ƒëi·ªÅu ki·ªán</small>
                                </div>
                            </li>
                        `).join('');
                    html += '</ul>';
                }

                if (!html) {
                    html = '<div class="text-center p-4 text-gray-600">Kh√¥ng c√≥ voucher n√†o</div>';
                }
                content.innerHTML = html;
            } else {
                content.innerHTML = '<div class="text-center p-4 text-danger">L·ªói khi t·∫£i voucher</div>';
            }
        })
        .catch(error => {
            console.error('Error:', error);
            content.innerHTML = '<div class="text-center p-4 text-danger">C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i sau.</div>';
        });

        // Reset tr·∫°ng th√°i n√∫t √Åp d·ª•ng
        applyBtn.disabled = true;
        modal.show();
    }

    // K√≠ch ho·∫°t n√∫t √Åp d·ª•ng khi ch·ªçn voucher
    function enableApplyBtn(totalPrice) {
        const applyBtn = document.getElementById('applyVoucherBtn');
        applyBtn.disabled = !document.querySelector('input[name="selectedVoucher"]:checked');

        applyBtn.onclick = async (e) => {
            if (applyBtn.disabled) return; 
            const voucher = document.getElementById('discount-amount');
            const selectedVoucher = document.querySelector('input[name="selectedVoucher"]:checked');
            if (!selectedVoucher) return;

            try {
                const voucherId = selectedVoucher.value;
                const response = await fetch(`/vouchers/apply-voucher/${voucherId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });
                const result = await response.json();
                if (result.success) {
                    showToast('success', result.message);
                    if (result.discountType === 'percent') {
                        voucher.textContent = formatCurrency((totalPrice * result.discountValue) / 100);
                        voucher.value = (totalPrice * result.discountValue) / 100
                    } else {
                        voucher.textContent = formatCurrency(result.discountValue);
                        voucher.value = result.discountValue;
                    }

                    const total = document.getElementById('total-price');
                    total.textContent = formatCurrency(totalPrice - voucher.value);
                    const payNow = document.getElementById('pay-now');
                    payNow.href += `&discountAmount=${voucher.value}&totalPrice=${totalPrice - voucher.value}&voucherId=${voucherId}`;
                    console.log(payNow.href);
                    bootstrap.Modal.getInstance(document.getElementById('voucherModal')).hide();
                } else {
                    showToast('error', result.message);
                }
            } catch (err) {
                console.log(err);
                showToast('error', 'C√≥ l·ªói khi th√™m voucher');
            }
        };
    }

    function formatDate(dateString) {
        if (!dateString) return '';
        const date = new Date(dateString);
        return date.toLocaleDateString('vi-VN', {
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
        });
    }

    function formatCurrency(amount) {
    return new Intl.NumberFormat('vi-VN', {
        style: 'currency',
        currency: 'VND'
    }).format(amount);
}

</script>