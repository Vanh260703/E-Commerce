// services/uploadMinio.service.js
const minioClient = require('../utils/minio');
const bucket = process.env.MINIO_BUCKET;
// Kh·ªüi t·∫°o bucket n·∫øu ch∆∞a c√≥
async function initMinioBucket() {
  const exists = await minioClient.bucketExists(bucket);
  if (!exists) {
    await minioClient.makeBucket(bucket, 'us-east-1');
    console.log(`‚úÖ Created bucket: ${bucket}`);
  } else {
    console.log(`‚úÖ Bucket ${bucket} already exists`);
  }
}

async function uploadToMinio(localFilePath, fileNameInMinio) {
  await minioClient.fPutObject(bucket, fileNameInMinio, localFilePath);
  console.log(`üÜô Uploaded ${fileNameInMinio} to MinIO`);

  return getPublicUrl(fileNameInMinio);
}

// L·∫•y URL c√¥ng khai t·ª´ MinIO
function getPublicUrl(fileName) {
  return `http://${process.env.MINIO_ENDPOINT}:${process.env.MINIO_PORT}/${bucket}/${fileName}`;
}

// X√≥a object kh·ªèi MinIO
async function deleteFromMinio(fileName) {
  await minioClient.removeObject(bucket, fileName);
  console.log(`üóëÔ∏è Deleted ${fileName} from MinIO`);
}

module.exports = {
  initMinioBucket,
  uploadToMinio,
  deleteFromMinio,
  getPublicUrl
};